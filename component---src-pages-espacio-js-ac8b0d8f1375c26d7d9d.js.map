{"version":3,"file":"component---src-pages-espacio-js-ac8b0d8f1375c26d7d9d.js","mappings":"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","sources":["webpack://aagnes/./src/components/PictureList.js","webpack://aagnes/./src/pages/espacio.js"],"sourcesContent":["import React, { useRef, useState, useEffect, createRef } from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { SmallSubtitle, Subtitle } from \"../components/TextComponents\"\nimport { getCurrentIdx, useOnScreen } from \"../utils/Generic\"\n\n\nconst PictureList = ({ projectData }) => {\n  const elRefs = useRef([]);\n  const wrapperRef = useRef()\n\n  if (elRefs.current.length !== projectData.length) {\n    // add or remove refs\n    elRefs.current = Array(projectData.length)\n      .fill()\n      .map((_, i) => elRefs.current[i] || createRef());\n  }\n\n  const onScreenEls = useOnScreen(elRefs, '-150px')\n\n  const [currentIdx, setCurrentIdx] = useState(0)\n\n  useEffect(() => {\n    setCurrentIdx(getCurrentIdx(onScreenEls[0]))\n  }, [onScreenEls])\n\n  const scrollToIdx = (idx) => {\n    elRefs.current[idx].current.scrollIntoView({behavior: 'smooth'})\n    setTimeout(() => {\n      elRefs.current[idx].current.scrollIntoView({behavior: 'smooth'})\n    }, 1500);\n  }\n\n  return (\n    <div ref={wrapperRef} className=\"pb-28\">\n      {projectData.map((i, n) => {\n        const id = \"project-wrapper-\"+n\n        const isOnScreen = onScreenEls.includes(id)\n\n        const { title, date, subtitle } = i\n\n        return (\n          [<div\n            key={'wrapper-'+n}\n            className={`hidden md:block flex-shrink-0 w-24 lg:w-48 h-fit sticky float-right`}\n            style={{\n              top: (isOnScreen || currentIdx > n) ? (n) * 24 + 96 : 'auto',\n              bottom: (currentIdx > n) ? 'auto' : (projectData.length - n) * 24,\n            }}\n          >\n            <button\n              onClick={() => scrollToIdx(n)}\n            >\n              <Subtitle customStyle={`mb-2 text-left ${isOnScreen ? 'opacity-100' : 'opacity-20'}`}>{title}</Subtitle>\n            </button>\n            <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-0'}`}>{subtitle}</SmallSubtitle>\n            <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-0'}`}>{date}</SmallSubtitle>\n          </div>,\n          <ProjectSection\n            projectData={i}\n            elementId={id}\n            key={n}\n            isOnScreen={isOnScreen}\n            innerRef={elRefs.current[n]}\n          />]\n        )\n      })}\n    </div>\n  )\n}\n\nconst ProjectSection = ({ projectData, elementId, isOnScreen, innerRef }) => {\n  return(\n  <div\n    className={`flex justify-end md:mx-10 mb-4 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-10'}`}\n    ref={innerRef}\n    id={elementId}\n  >\n    <div className=\"grid lg:grid-cols-[repeat(2,minmax(100px,_1450px))] gap-4 mr-4\">\n      <div\n        className={`flex flex-col md:hidden justify-end items-end snap-start`}\n      >\n        <Subtitle customStyle={`mb-2 text-left ${isOnScreen ? 'opacity-100' : 'opacity-20'}`}>{projectData.name}</Subtitle>\n        <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500`}>{projectData.location}</SmallSubtitle>\n        <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500`}>{projectData.year}</SmallSubtitle>\n      </div>\n      {\n        projectData.photos?.map((i, n) => <GatsbyImage\n            key={'image'+n}\n            image={getImage(i)}\n            className={`snap-start ${(i.childImageSharp.gatsbyImageData.width > i.childImageSharp.gatsbyImageData.height) ? 'md:col-span-2' : 'md:col-span-1'} xl:min-h-[85vh]`}\n            alt=\"Aagnes\"\n          />\n        )\n      }\n    </div>\n  </div>\n)}\nexport default PictureList;","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport Layout from \"../components/Layout\"\nimport PictureList from \"../components/PictureList\"\n\nconst EspacioPage = ({ data }) => {\n\n  const projects = data.allMdx.edges.map((item) => {\n    const project = item.node.frontmatter\n    return {\n    title: project.title,\n    subtitle: project.location,\n    date: project.year,\n    photos: project.embeddedImages,\n  }})\n\n  return (\n    <section\n      className=\"w-full h-full scroll-pt-24 overflow-scroll snap-y snap-mandatory\"\n    >\n      <Helmet>\n        <title>Aagnes | Espacio</title>\n      </Helmet>\n      <div className=\"h-24 w-full\" />\n      <PictureList\n        projectData={projects}\n      />\n    </section>\n  )\n}\n\n\nexport const query = graphql`\n{\n  allMdx(\n    filter: {frontmatter: {variant: {eq: \"project\"}}}\n    sort: {frontmatter: {year: ASC}}\n  ) {\n    edges {\n      node {\n        frontmatter {\n          title\n          year\n          slug\n          excerpt\n          location\n          embeddedImages {\n            childImageSharp {\n              gatsbyImageData(width: 800)\n            }\n          }\n          variant\n        }\n      }\n    }\n  }\n}`\n\nEspacioPage.Layout = Layout\nexport default EspacioPage;\n"],"names":["ProjectSection","projectData","elementId","isOnScreen","innerRef","className","ref","id","customStyle","name","location","year","photos","map","i","n","G","key","image","getImage","childImageSharp","gatsbyImageData","width","height","alt","elRefs","useRef","wrapperRef","current","length","Array","fill","_","createRef","onScreenEls","useOnScreen","currentIdx","setCurrentIdx","useState","useEffect","getCurrentIdx","includes","title","date","subtitle","style","top","bottom","onClick","scrollToIdx","idx","scrollIntoView","behavior","setTimeout","EspacioPage","data","projects","allMdx","edges","item","project","node","frontmatter","embeddedImages","Layout"],"sourceRoot":""}