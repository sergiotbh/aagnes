{"version":3,"file":"component---src-pages-espacio-js-24145bca4d2124a05001.js","mappings":"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","sources":["webpack://aagnes/./src/components/PictureList.js","webpack://aagnes/./src/pages/espacio.js"],"sourcesContent":["import React, { useRef, useState, useEffect, createRef } from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { SmallSubtitle, Subtitle } from \"../components/TextComponents\"\nimport { getCurrentIdx, useOnScreen } from \"../utils/Generic\"\n\n\nconst PictureList = ({ projectData }) => {\n  const elRefs = useRef([]);\n  const wrapperRef = useRef()\n\n  if (elRefs.current.length !== projectData.length) {\n    // add or remove refs\n    elRefs.current = Array(projectData.length)\n      .fill()\n      .map((_, i) => elRefs.current[i] || createRef());\n  }\n\n  const onScreenEls = useOnScreen(elRefs, '-150px')\n\n  const [currentIdx, setCurrentIdx] = useState(0)\n\n  useEffect(() => {\n    setCurrentIdx(getCurrentIdx(onScreenEls[0]))\n  }, [onScreenEls])\n\n  const scrollToIdx = (idx) => {\n    elRefs.current[idx].current.scrollIntoView({behavior: 'smooth'})\n    setTimeout(() => {\n      elRefs.current[idx].current.scrollIntoView({behavior: 'smooth'})\n    }, 1500);\n  }\n\n  return (\n    <div ref={wrapperRef}>\n      {projectData.map((i, n) => {\n        const id = \"project-wrapper-\"+n\n        const isOnScreen = onScreenEls.includes(id)\n\n        return (\n          [<div\n            key={'wrapper-'+n}\n            className={`hidden md:block flex-shrink-0 w-24 lg:w-48 h-fit sticky float-right`}\n            style={{\n              top: (isOnScreen || currentIdx > n) ? (n) * 24 + 96 : 'auto',\n              bottom: (currentIdx > n) ? 'auto' : (projectData.length - n) * 24,\n            }}\n          >\n            <button\n              onClick={() => scrollToIdx(n)}\n            >\n              <Subtitle customStyle={`mb-2 text-left ${isOnScreen ? 'opacity-100' : 'opacity-20'}`}>{i.name}</Subtitle>\n            </button>\n            <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-0'}`}>{i.location}</SmallSubtitle>\n            <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-0'}`}>{i.year}</SmallSubtitle>\n          </div>,\n          <ProjectSection\n            projectData={i}\n            elementId={id}\n            key={n}\n            isOnScreen={isOnScreen}\n            innerRef={elRefs.current[n]}\n          />]\n        )\n      })}\n    </div>\n  )\n}\n\nconst ProjectSection = ({ projectData, elementId, isOnScreen, innerRef }) => {\n  console.log(\"PROJ\", projectData);\n  return(\n  <div\n    className={`flex justify-end md:mx-10 mb-4 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-10'}`}\n    ref={innerRef}\n    id={elementId}\n  >\n    <div className=\"grid lg:grid-cols-[repeat(2,minmax(100px,_1450px))] gap-4 mr-4\">\n      <div\n        className={`flex flex-col md:hidden justify-end items-end snap-start`}\n      >\n        <Subtitle customStyle={`mb-2 text-left ${isOnScreen ? 'opacity-100' : 'opacity-20'}`}>{projectData.name}</Subtitle>\n        <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500`}>{projectData.location}</SmallSubtitle>\n        <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500`}>{projectData.year}</SmallSubtitle>\n      </div>\n      {\n        projectData.photos?.map((i, n) => <GatsbyImage\n            key={'image'+n}\n            image={getImage(i)}\n            className={`snap-start ${(i.gatsbyImageData.width > i.gatsbyImageData.height) ? 'md:col-span-2' : 'md:col-span-1'} max-h-[90vh]`}\n            alt=\"Aagnes\"\n          />\n        )\n      }\n    </div>\n  </div>\n)}\nexport default PictureList;","import { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport React, { useRef, useState, useEffect, createRef } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport Layout from \"../components/Layout\"\nimport PictureList from \"../components/PictureList\"\n\nconst projects = [\n  {\n    id: \"casaCedros\",\n    name: \"Casa Cedros\",\n    location: \"Tapalpa, Jalisco\",\n    year: \"2022\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\"\n  }\n]\n\nconst EspacioPage = ({ data }) => {\n\n  let projectPhotos = data.projectPhotos.edges.reduce((carry, value) => {\n    return {...carry, [value.node.relativeDirectory.replace(\"project_\", \"\")]: {photos: []}};\n  }, {});\n\n\n  data.projectPhotos.edges.forEach(element => {\n    projectPhotos[element.node.relativeDirectory.replace(\"project_\", \"\")].photos.push(element.node.childImageSharp)\n  });\n\n  const projectList = projects.map((i, n) => {\n    const photos = projectPhotos[i.id.replace(\"project_\", \"\")].photos\n    return {...i, photos}\n  })\n\n  return (\n    <section\n      className=\"w-full h-full scroll-pt-24 overflow-scroll snap-y snap-mandatory\"\n    >\n      <Helmet>\n        <title>Aagnes | Espacio</title>\n      </Helmet>\n      <div className=\"h-24 w-full\" />\n      <PictureList\n        projectData={projectList}\n      />\n    </section>\n  )\n}\n\n\nexport const query = graphql`\n  query{\n    projectPhotos: allFile(\n      filter: {relativeDirectory: {regex: \"/project/\"}}\n      sort: {fields: name, order: ASC}\n    ) {\n        edges {\n          node {\n            childImageSharp{\n              gatsbyImageData(\n                placeholder: DOMINANT_COLOR\n                formats: [AUTO, WEBP, AVIF]\n                quality: 60,\n              )\n            }\n            relativeDirectory\n          }\n        }\n      }\n    }\n`\n\nEspacioPage.Layout = Layout\nexport default EspacioPage;\n"],"names":["ProjectSection","projectData","elementId","isOnScreen","innerRef","console","log","className","ref","id","customStyle","name","location","year","photos","map","i","n","G","key","image","getImage","gatsbyImageData","width","height","alt","elRefs","useRef","wrapperRef","current","length","Array","fill","_","createRef","onScreenEls","useOnScreen","useState","currentIdx","setCurrentIdx","useEffect","getCurrentIdx","includes","style","top","bottom","onClick","idx","scrollIntoView","behavior","setTimeout","projects","description","EspacioPage","data","projectPhotos","edges","reduce","carry","value","node","relativeDirectory","replace","forEach","element","push","childImageSharp","projectList","Layout"],"sourceRoot":""}