{"version":3,"file":"component---src-pages-mdx-frontmatter-variant-mdx-frontmatter-slug-js-content-file-path-users-sergiotbh-react-projects-aagnes-src-sources-press-est-living-est-living-mdx-eb8b94f896524f273770.js","mappings":"0KAGA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,cAAoBA,EAAAA,SAC7B,CAKA,MAJA,SAAoBD,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOE,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOJ,EAAYF,EAAAA,cAAoBE,EAAWH,EAAOC,EAAAA,cAAoBF,EAAmBC,IAAUD,GAC5G,E,wCCHA,MAAMS,EAAoBC,IAAY,IAAX,KAACC,GAAK,EAC/B,MAAM,EAACC,EAAO,EAAEC,IAAcC,EAAAA,EAAAA,YAgB9B,OAfAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaL,EAAKM,IAAIC,YAC5B,GACO,YADCF,EAAWG,QAEfN,EAAW,CAAC,CACVO,MAAOJ,EAAWI,MAClBC,SAAUL,EAAWM,QACrBC,KAAMP,EAAWQ,KACjBC,OAAQT,EAAWU,iBAIrB,GAEH,IACIxB,EAAAA,cAAoByB,EAAAA,EAAQ,KAAMzB,EAAAA,cAAoB,UAAW,CACtE0B,UAAW,oEACV1B,EAAAA,cAAoB2B,EAAAA,EAAQ,KAAM3B,EAAAA,cAAoB,QAAS,KAAM,qBAAsBA,EAAAA,cAAoB,MAAO,CACvH0B,UAAW,gBACThB,GAAWV,EAAAA,cAAoB4B,EAAAA,EAAa,CAC9CC,YAAanB,KACX,EA6BS,SAASoB,EAAiB/B,GACvC,OAAOC,EAAAA,cAAoBO,EAAmBR,EAAOC,EAAAA,cAAoB+B,EAAqBhC,GAChG,CAJAQ,EAAkBkB,OAASA,EAAAA,C,mEClD3B,MAgEMO,EAAiB,IAAuD,IAAD,MAArD,YAAEH,EAAW,UAAEI,EAAS,WAAEC,EAAU,SAAEC,GAAU,EACtE,OACA,uBACET,UAAS,mEAAoEQ,EAAa,cAAgB,cAC1GE,IAAKD,EACLE,GAAIJ,GAEJ,uBAAKP,UAAU,kEACb,uBACEA,UAAS,4DAET,gBAAC,KAAQ,CAACY,YAAW,mBAAoBJ,EAAa,cAAgB,eAAiBL,EAAYU,MACnG,gBAAC,KAAa,CAACD,YAAW,wCAA2CT,EAAYW,UACjF,gBAAC,KAAa,CAACF,YAAW,wCAA2CT,EAAYP,OAG/D,QAFd,EAEJO,EAAYN,cAAM,aAAlB,EAAoBkB,KAAI,CAACC,EAAGC,IAAM,gBAAC,EAAAC,EAAW,CAC1CC,IAAK,QAAQF,EACbG,OAAOC,EAAAA,EAAAA,GAASL,GAChBhB,UAAS,eAAiBgB,EAAEM,gBAAgBC,gBAAgBC,MAAQR,EAAEM,gBAAgBC,gBAAgBE,OAAU,gBAAkB,iBAAe,mBACjJC,IAAI,cAKR,EAER,IA3FoB,IAAsB,IAArB,YAAEvB,GAAa,EAClC,MAAMwB,GAASC,EAAAA,EAAAA,QAAO,IAChBC,GAAaD,EAAAA,EAAAA,UAEfD,EAAOG,QAAQC,SAAW5B,EAAY4B,SAExCJ,EAAOG,QAAUE,MAAM7B,EAAY4B,QAChCE,OACAlB,KAAI,CAACmB,EAAGlB,IAAMW,EAAOG,QAAQd,KAAMmB,EAAAA,EAAAA,gBAGxC,MAAMC,GAAcC,EAAAA,EAAAA,IAAYV,EAAQ,WAElC,EAACW,EAAW,EAACC,IAAiBrD,EAAAA,EAAAA,UAAS,IAE7CC,EAAAA,EAAAA,YAAU,KACRoD,GAAcC,EAAAA,EAAAA,IAAcJ,EAAY,IAAI,GAC3C,CAACA,IASJ,OACE,uBAAK1B,IAAKmB,EAAY7B,UAAU,SAC7BG,EAAYY,KAAI,CAACC,EAAGC,KACnB,MAAMN,EAAK,mBAAmBM,EACxBT,EAAa4B,EAAYK,SAAS9B,IAElC,MAAEnB,EAAK,KAAEG,EAAI,SAAEF,GAAauB,EAElC,MACE,CAAC,uBACCG,IAAK,WAAWF,EAChBjB,UAAS,sEACT0C,MAAO,CACLC,IAAMnC,GAAc8B,EAAarB,EAAW,GAALA,EAAU,GAAK,OACtD2B,OAASN,EAAarB,EAAK,OAAoC,IAA1Bd,EAAY4B,OAASd,KAG5D,0BACE4B,QAAS,KAAMC,OAzBNC,EAyBkB9B,EAxBrCU,EAAOG,QAAQiB,GAAKjB,QAAQkB,eAAe,CAACC,SAAU,gBACtDC,YAAW,KACTvB,EAAOG,QAAQiB,GAAKjB,QAAQkB,eAAe,CAACC,SAAU,UAAU,GAC/D,MAJgBF,KAyBqB,GAE9B,gBAAC,KAAQ,CAACnC,YAAW,mBAAoBJ,EAAa,cAAgB,eAAiBhB,IAEzF,gBAAC,KAAa,CAACoB,YAAW,yCAA0CJ,EAAa,cAAgB,cAAgBf,GACjH,gBAAC,KAAa,CAACmB,YAAW,yCAA0CJ,EAAa,cAAgB,cAAgBb,IAEnH,gBAACW,EAAc,CACbH,YAAaa,EACbT,UAAWI,EACXQ,IAAKF,EACLT,WAAYA,EACZC,SAAUkB,EAAOG,QAAQb,KACxB,IAGH,C,sEClCH,MAAMkC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBxE,GAC/B,MAAMyE,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAfvE,EACFA,EAAWyE,GAGb,IAAIA,KAAsBzE,IAChC,CAACyE,EAAmBzE,GACzB,C","sources":["webpack://aagnes/./src/sources/press/est-living/est-living.mdx","webpack://aagnes/./src/pages/{mdx.frontmatter__variant}/{mdx.frontmatter__slug}.js","webpack://aagnes/./src/components/PictureList.js","webpack://aagnes/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/sergiotbh/react-projects/aagnes/src/sources/press/est-living/est-living.mdx\";\nimport {graphql, useStaticQuery} from 'gatsby';\nimport React, {useEffect, useState} from 'react';\nimport {Helmet} from 'react-helmet';\nimport Layout from '../../components/Layout';\nimport PictureList from '../../components/PictureList';\nconst ArticleDetailPage = ({data}) => {\n  const [article, setArticle] = useState();\n  useEffect(() => {\n    const objectData = data.mdx.frontmatter;\n    switch (objectData.variant) {\n      case 'article':\n        setArticle([{\n          title: objectData.title,\n          subtitle: objectData.excerpt,\n          date: objectData.year,\n          photos: objectData.embeddedImages\n        }]);\n        break;\n      default:\n        break;\n    }\n  }, []);\n  return React.createElement(Layout, null, React.createElement(\"section\", {\n    className: \"w-full h-full scroll-pt-24 overflow-scroll snap-y snap-mandatory\"\n  }, React.createElement(Helmet, null, React.createElement(\"title\", null, \"Aagnes | Espacio\")), React.createElement(\"div\", {\n    className: \"h-24 w-full\"\n  }), article && React.createElement(PictureList, {\n    projectData: article\n  })));\n};\nexport const query = graphql`\n  query($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        embeddedImages {\n          childImageSharp {\n            gatsbyImageData(width: 500)\n          }\n        }\n        title\n        year\n        slug\n        excerpt\n        imageSrc {\n          childImageSharp {\n            gatsbyImageData(width: 500)\n          }\n        }\n        variant\n\n      }\n    }\n  }\n`;\nArticleDetailPage.Layout = Layout;\nArticleDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticleDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useRef, useState, useEffect, createRef } from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { SmallSubtitle, Subtitle } from \"../components/TextComponents\"\nimport { getCurrentIdx, useOnScreen } from \"../utils/Generic\"\n\n\nconst PictureList = ({ projectData }) => {\n  const elRefs = useRef([]);\n  const wrapperRef = useRef()\n\n  if (elRefs.current.length !== projectData.length) {\n    // add or remove refs\n    elRefs.current = Array(projectData.length)\n      .fill()\n      .map((_, i) => elRefs.current[i] || createRef());\n  }\n\n  const onScreenEls = useOnScreen(elRefs, '-150px')\n\n  const [currentIdx, setCurrentIdx] = useState(0)\n\n  useEffect(() => {\n    setCurrentIdx(getCurrentIdx(onScreenEls[0]))\n  }, [onScreenEls])\n\n  const scrollToIdx = (idx) => {\n    elRefs.current[idx].current.scrollIntoView({behavior: 'smooth'})\n    setTimeout(() => {\n      elRefs.current[idx].current.scrollIntoView({behavior: 'smooth'})\n    }, 1500);\n  }\n\n  return (\n    <div ref={wrapperRef} className=\"pb-28\">\n      {projectData.map((i, n) => {\n        const id = \"project-wrapper-\"+n\n        const isOnScreen = onScreenEls.includes(id)\n\n        const { title, date, subtitle } = i\n\n        return (\n          [<div\n            key={'wrapper-'+n}\n            className={`hidden md:block flex-shrink-0 w-24 lg:w-48 h-fit sticky float-right`}\n            style={{\n              top: (isOnScreen || currentIdx > n) ? (n) * 24 + 96 : 'auto',\n              bottom: (currentIdx > n) ? 'auto' : (projectData.length - n) * 24,\n            }}\n          >\n            <button\n              onClick={() => scrollToIdx(n)}\n            >\n              <Subtitle customStyle={`mb-2 text-left ${isOnScreen ? 'opacity-100' : 'opacity-20'}`}>{title}</Subtitle>\n            </button>\n            <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-0'}`}>{subtitle}</SmallSubtitle>\n            <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-0'}`}>{date}</SmallSubtitle>\n          </div>,\n          <ProjectSection\n            projectData={i}\n            elementId={id}\n            key={n}\n            isOnScreen={isOnScreen}\n            innerRef={elRefs.current[n]}\n          />]\n        )\n      })}\n    </div>\n  )\n}\n\nconst ProjectSection = ({ projectData, elementId, isOnScreen, innerRef }) => {\n  return(\n  <div\n    className={`flex justify-end md:mx-10 mb-4 transition-opacity duration-500 ${isOnScreen ? 'opacity-100' : 'opacity-10'}`}\n    ref={innerRef}\n    id={elementId}\n  >\n    <div className=\"grid lg:grid-cols-[repeat(2,minmax(100px,_1450px))] gap-4 mr-4\">\n      <div\n        className={`flex flex-col md:hidden justify-end items-end snap-start`}\n      >\n        <Subtitle customStyle={`mb-2 text-left ${isOnScreen ? 'opacity-100' : 'opacity-20'}`}>{projectData.name}</Subtitle>\n        <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500`}>{projectData.location}</SmallSubtitle>\n        <SmallSubtitle customStyle={`mb-1 transition-opacity duration-500`}>{projectData.year}</SmallSubtitle>\n      </div>\n      {\n        projectData.photos?.map((i, n) => <GatsbyImage\n            key={'image'+n}\n            image={getImage(i)}\n            className={`snap-start ${(i.childImageSharp.gatsbyImageData.width > i.childImageSharp.gatsbyImageData.height) ? 'md:col-span-2' : 'md:col-span-1'} xl:min-h-[85vh]`}\n            alt=\"Aagnes\"\n          />\n        )\n      }\n    </div>\n  </div>\n)}\nexport default PictureList;","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","ArticleDetailPage","_ref","data","article","setArticle","useState","useEffect","objectData","mdx","frontmatter","variant","title","subtitle","excerpt","date","year","photos","embeddedImages","Layout","className","Helmet","PictureList","projectData","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","ProjectSection","elementId","isOnScreen","innerRef","ref","id","customStyle","name","location","map","i","n","G","key","image","getImage","childImageSharp","gatsbyImageData","width","height","alt","elRefs","useRef","wrapperRef","current","length","Array","fill","_","createRef","onScreenEls","useOnScreen","currentIdx","setCurrentIdx","getCurrentIdx","includes","style","top","bottom","onClick","scrollToIdx","idx","scrollIntoView","behavior","setTimeout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}